pipeline {
  // setting variables used for the build
  environment {
    registry = "rajithr007/"
    registryCredential = 'Jenkins-dockerhub'
    dockerImageFE = ''
    dockerImageBE  = ''
  }  
  
  // Setting the agent for the pipeline
  agent any
    
  //tools {nodejs "node"}
    
  stages {
    stage("verify tools"){
      steps{
        bat '''
        git --version
        docker version
        docker info
        docker compose version
        npm version
        '''
      }
    }

    stage('Git') {
      steps {
        //git branch: 'develop', credentialsId: 'jenkins-gitab', url: 'http://192.168.1.11/devops/devops-sample-app.git'
        git branch:'develop',url: 'https://github.com/RajithRajan/devops-sample-app.git'
      }
    }
    
    stage('Build UI Angular') {
        steps {
            dir("client\\angular-app") { 
              // Installed angulat cli locally with in the project
                bat 'npm install @angular/cli --save-dev'
              // Install the the dependency packages needed for the app  
                bat 'npm install'
              // run the build  
                bat 'npm run build'
            }
        }
    }
     
//    stage('Test Angular') {
//        steps {
//            dir("client\\angular-app") { 
//                bat 'node test'
//            }            
//        }
//    }
    
//    stage('Static code analysis') {
//        steps {
//            dir("server\\") {
//                bat 'echo ${BUILD_URL}'
//                bat 'echo ${WORKSPACE}'                
//                bat 'npm run-script sonar' 
//            }
//        }
//    }

//    stage('Test Node') {
//        steps {
//            dir("server") { 
//                catchError {
//                    bat 'node test'
//                }
//            }            
//        }
//    }

    stage('Build Backend NodeJS') {
        steps { 
            dir("server") {
              // Install the the dependency packages needed for the app  
                bat 'npm install' 
              // run the build   
                //bat 'npm run build'
            }
        }    
    }  
    stage('SonarQube analysis Proj') {
      steps {
        script {
          def scannerHome = tool 'sonarscan';
          withSonarQubeEnv('sonar') {
                bat "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=meanstack -Dsonar.projectName=devops-sample-app"
          }
        }
      }
    }
    stage('Build docker for UI') {
      steps {
        script {
            dir("client\\angular-app") {
                dockerImageFE = docker.build registry + "devops-sample-app-ui" + ":$BUILD_NUMBER"
            }    
        }
      }
    }       

    stage('Build docker for Angular') {
      steps {
        script {
            dir('server') {
                dockerImageBE = docker.build registry + "devops-sample-app-be" + ":$BUILD_NUMBER"
            } 
        }
      }
    }  

    stage('Publish docker to docker hub') {
      steps {
        script {
          docker.withRegistry( '', registryCredential ) {
            dockerImageFE.push()
            dockerImageBE.push()
          }
        }
      }
    }   

    stage('Deploy to K8S') {
      steps {
        script {
          echo " Deploy to K8S "
        }
      }
    }

  } //end of stages
    
    post { 
        always { 
            //Remove Unused docker imag
            bat "docker rmi ${registry}devops-sample-app-ui:$BUILD_NUMBER"
            bat "docker rmi ${registry}devops-sample-app-be:$BUILD_NUMBER"
        }
        success {
            echo "=============================================="
            echo '************ Job completed successfully!'
            echo "=============================================="
        }        
    }  // end of post 
}
